name: Docker Runner

on:
  push:
    branches: [ main ]

jobs:
  run:
    runs-on: self-hosted
    environment: production

    steps:
      - uses: actions/checkout@v3

      - name: Build Container
        run: docker compose -f docker-compose.yml build
        env:
          TOKEN: ${{ secrets.TOKEN }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          OPENCAGE_API_KEY: ${{ secrets.OPENCAGE_API_KEY }}
          OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
          OWNER_ID: ${{ secrets.OWNER_ID }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
      
      - name: Stop Container
        run: docker compose -f docker-compose.yml down
        
      - name: Run Container
        run: |
          docker compose -f docker-compose.yml up -d
          docker ps
          docker logs exodus2bot-1
        env:
          TOKEN: ${{ secrets.TOKEN }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          OPENCAGE_API_KEY: ${{ secrets.OPENCAGE_API_KEY }}
          OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
          OWNER_ID: ${{ secrets.OWNER_ID }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}

      - name: Cleanup Unused Images and Containers
        run: docker system prune -f
