name: Docker Runner

on:
  push:
    branches: [ main ]

jobs:
  run:
    runs-on: self-hosted
    environment: production

    steps:
      - uses: actions/checkout@v3

      - name: Create .env file if not exists
        run: |
          if [ ! -f /home/cwessel/exodus2/.env ]; then
            echo "MARIADB_ROOT_PASSWORD=${{ secrets.MARIADB_ROOT_PASSWORD }}" > /home/cwessel/exodus2/.env
            echo "TOKEN=${{ secrets.TOKEN }}" >> /home/cwessel/exodus2/.env
            echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> /home/cwessel/exodus2/.env
            echo "DB_USER=${{ secrets.DB_USER }}" >> /home/cwessel/exodus2/.env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> /home/cwessel/exodus2/.env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> /home/cwessel/exodus2/.env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> /home/cwessel/exodus2/.env
            echo "DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}" >> /home/cwessel/exodus2/.env
            echo "OPENCAGE_API_KEY=${{ secrets.OPENCAGE_API_KEY }}" >> /home/cwessel/exodus2/.env
            echo "OPENWEATHERMAP_API_KEY=${{ secrets.OPENWEATHERMAP_API_KEY }}" >> /home/cwessel/exodus2/.env
            echo "OWNER_ID=${{ secrets.OWNER_ID }}" >> /home/cwessel/exodus2/.env
            echo "QUOTE_ALLOWED_GUILD_ID=${{ secrets.QUOTE_ALLOWED_GUILD_ID }}" >> /home/cwessel/exodus2/.env
            echo ".env file created"
          else
            echo ".env file already exists, skipping creation"
          fi

      - name: Build Container
        run: podman-compose -f docker-compose.yml build
      
      - name: Stop Container
        run: podman-compose -f docker-compose.yml down
        
      - name: Run Container
        run: |
          podman-compose -f docker-compose.yml up -d
          docker ps --format '{{.Name}}' > containername
          sleep 5
          docker logs $(cat containername)
          hostname
          uname -a
          env > /tmp/github.env

      - name: Cleanup Unused Images and Containers
        run: docker system prune -f
        
